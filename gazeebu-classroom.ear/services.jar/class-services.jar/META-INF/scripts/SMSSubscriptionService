import com.rameses.annotations.*;

/***
* This class handles management of classes.
*/
public class SMSSubscriptionService {

	@PersistenceContext("main")
	def em;
	
	@Env
	def env;
	
	@Service("SMSService")
	def smsService;
	
	@ProxyMethod
	public def subscribe( def o ){
		if(!o.userid) o.userid = env.userid;
		if( o.phone ) o.phone = o.phone.replace('+', '');
		em.create( "sms_subscription", o);
	}
	
	//this method depends on whatever is passed, either userid or sessionid. If session id, retrieve the userid first
	@ProxyMethod
	public def getSubscription(def o) {
		if(!o.userid) o.userid = env.userid;
		return em.read( "sms_subscription", o );
	}

	@ProxyMethod
	public def unsubscribe(def o){
		print "removing " + o;
		em.delete( "sms_subscription", o);
	}
	
	@ProxyMethod
	public def update( def o){
		return em.update("sms_subscription", o);
	}
	
	@ProxyMethod
	public def sendSubscribed( def o ){
		//check if there is a subscription and send message
		assert o.msgtype;
		assert o.userid;
		assert o.classid;
		assert o.msg;
		def x = em.read( "sms_subscription", o );
		if(x) {
			//print "sms sender to ->" + x.phone + "=" + o.msg;
			smsService.send( [to:x.phone, msg: o.msg ] );
		}	
	}
	
	@ProxyMethod
	public def getSubscriptions( param ) {
		assert param.userid;
		
		return em.sqlContext.createQuery('select * from sms_subscription where userid=?')
		         .setParameter(1, param.userid).resultList;
	}
}
