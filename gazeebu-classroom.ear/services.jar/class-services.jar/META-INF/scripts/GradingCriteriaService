import com.rameses.annotations.*;

class GradingCriteriaService {
	
	@PersistenceContext("main")
	def em;
	
	private def dtformat = new java.text.SimpleDateFormat("yyyy-MM-dd");

	@ProxyMethod
	public def getAll(def o) {
		
		def m = [:];
		m.criteriaList  = getGradingCriteria(o);
		m.gradingPeriods = getGradingPeriods(o);
		m.gradingEq = getGradingEquivalents(o);
		return m;
	}

	
	@ProxyMethod
	public def getGradingCriteria(def o) {
		return em.sqlContext.createNamedQuery("grading:criterialist").setParameters(o).resultList;
	}
	
	
	@ProxyMethod
	public def getGradingPeriods(def o) {
		def list = em.sqlContext.createNamedQuery("grading:periods").setParameters(o).resultList.sort();
		list.each {
			if(it.fromdate) it.fromdate = dtformat.format(it.fromdate);
			if(it.todate) it.todate = dtformat.format(it.todate);
		}
		return list;
	}
	
	@ProxyMethod
	public def getGradingEquivalents(def o) {
		return em.sqlContext.createNamedQuery("grading:eqs").setParameters(o).resultList;
	}
	
	
	@ProxyMethod
	public void saveCriteria(def o) {
		def list = o.list;
		list.each {
			if(!it.objid) it.objid = "CLGRD:" + new java.rmi.server.UID();
			if(!it.weight) it.weight = 0; 
			it.weight = new java.math.BigDecimal(it.weight);
			if(!it.indexno) it.indexno = 0;
		}
		if( list.sum{ it.weight } != 100 ) {
			throw new Exception( "Total weight must be equal to 100" );
		}
		list.each {
			em.save( "grading:criteria", it );
		}
		def removedItems = o.removedItems;
		removedItems.each {
			em.delete( 	"grading:criteria", it );
		}
	}

	@ProxyMethod
	public void saveGradingPeriod(def o) {
		def list = o.list;
		if(list) {
			int i = 0;
			list.each {
				if(!it.objid) it.objid = "CLGRDPRD:" + new java.rmi.server.UID();
				if(!it.indexno) it.indexno = i++;
				em.save( "grading:period", it );
			}
		}
		def removedItems = o.removedItems;
		removedItems.each {
			em.delete( 	"grading:period", it );
		}
	}
	
	@ProxyMethod
	public void saveGradingEq(def o) {
		em.sqlContext.createNamedExecutor("grading:clear-eqs").setParameter("classid", o.classid).execute();
		def list = o.list;
		int idx =0;
		list.each {
			it.objid = "CLSGREQ" + new java.rmi.server.UID();
			it.indexno=(idx++);
			it.classid = o.classid;
			em.create( "grading:eq", it );
		}
	}
	
}
