import com.rameses.annotations.*;

/***
 This class handles notifications during invitation
**/

class ClassInviteNotifier {
	
	@Service("UserProfileService")
	def userService;
	
	@Service("ClassroomService")
	def classroomService;
	
	@Resource("TemplateService")
	def templateService;
	
	@Service("EmailService")
	def emailSvc;
	
	@Env
	def env;
	
	
	private def sendEmail( email, subject, msg ) {
		if(!email) return;
		
		def m = [:];
		m.subject = subject;
		m.message = msg;	
		m.recipients = [email];
		emailSvc.send(m);	
	}
	
	//teacher is the sender
	@After(pattern="ClassInvitationService.sendStudentInvitation.*")
	public def notifyStudent(def e) {
		def r = e.args[0];
		r.invitees.each {
			def c = classroomService.getClassInfo( r.classid );
			def u = userService.getUserInfo( [objid: it.objid] );
			def t = c.teacher;
			
			def m = [:];
			m.senderlname =  t.lastname;
			m.senderfname = t.firstname
			m.recipientlname = u.lastname;
			m.recipientfname = u.firstname;
			m.msg = r.msg;
			m.classname =  c.name;
			m.schedules = c.schedules;
			
			def msg = templateService.getResult( "META-INF/templates/invite_student_message.groovy", m );
			
			sendEmail( u.email, "Invitation from $t.lastname, $t.firstname", msg );
		}
	}
	
    //student is the sender
	@After(pattern="ClassInvitationService.sendRequestToJoin.*")
	public def notifyTeacher(def e) {
		def r = e.args[0];
		def u = userService.getUserInfo( [objid: env.userid ]);
		r.classes.each {
			def c = classroomService.getClassInfo( it.classid );
			def t = c.teacher;
			
			print "sending to " + c.teacher.email + " Hello " + c.teacher.firstname + u.lastname + "," + u.firstname + " would like to join your " + c.name + " " + c.schedules + " class";  
			print "message : " + r.msg;
			
			def m = [:];
			m.senderlname = u.lastname;
			m.senderfname = u.firstname;
			m.recipientlname = t.lastname;
			m.recipientfname = t.firstname;
			m.msg = r.msg;
			m.classname =  c.name;
			m.schedules = c.schedules;
			
			def msg = templateService.getResult( "META-INF/templates/request_join_message.groovy", m );
			
			sendEmail( t.email, "Request from $u.lastname, $u.firstname", msg );
		}
	}
	
	@After(pattern="ClassInvitationService.accept.*")
	public def notifyAccepted(def evt ) {
		//check first who accepted.
		def r = evt.args[0];
		def c = classroomService.getClassInfo( r.classid );		
		def usertype = (c.teacher.objid == env.userid) ? "teacher" : "student";
		
		def m = [:];
		m.usertype = usertype;
		m.classid = c.objid;
		m.classname =  c.name;
		m.schedules = c.schedules;
		
		if(usertype == "student") {
			//notify teacher student has accepted
			def u = userService.getUserInfo( [objid: env.userid] );
			def t = c.teacher;
			
			m.senderlname =  u.lastname;
			m.senderfname = u.firstname;
			m.recipientlname = t.lastname;
			m.recipientfname = t.firstname;
			
			def msg = templateService.getResult( "META-INF/templates/joined_class_message.groovy", m );
			sendEmail( t.email, "$u.lastname, $u.firstname has accept your invitation", msg );
		}
		else if(usertype == "teacher") {
			//notify student teacher has accepted
			def u =  userService.getUserInfo( [objid: r.userid] );
			def t = c.teacher;

			m.senderlname =  t.lastname;
			m.senderfname = t.firstname
			m.recipientlname = u.lastname;
			m.recipientfname = u.firstname;
			
			def msg = templateService.getResult( "META-INF/templates/joined_class_message.groovy", m );
			sendEmail( u.email, "$t.lastname, $t.firstname has accept your request", msg );
		}
	}
	
}

