import com.rameses.annotations.*;

class SessionNotifierMessageHandler {
	
	@Service("SessionService")
	def sessionService;
	
	@Service("ClassroomService")
	def classroomService;
	
    @After(pattern="MessageService.send*")
    public def broadcastMessage( def evt ) {
		def r = evt.result;
		
		if( r.subscribers ) {
			sessionService.notifyUser( r.userid, r );
			r.subscribers.each {
				sessionService.notifyUser( it.userid, r );
			}
		}
		else if( r.channelid ){
			def classroom = classroomService.getClassInfo( r.channelid );		
			classroom.members.each {
				sessionService.notifyUser( it.objid, r );
			}
		}
    }
	
    @After(pattern="MessageService.respond*")
    public def broadcastResponse( def evt ) {
		def r = evt.result;
		
		sessionService.notifyUser( r.userid, r );
		if( r.userid != r.parent.userid ) {
			sessionService.notifyUser( r.parent.userid, r );
		}
		
		
		if( r.subscribers && r.parent.privacy != 0 ) {
			r.subscribers.each {
				if( it.userid != r.userid && it.userid != r.parent.userid ) {
					sessionService.notifyUser( it.userid, r );
				}
			}
		}
		else if( r.channelid ) {
			def classroom = classroomService.getClassInfo( r.channelid );		
			classroom.members.each {
				if( it.objid != r.userid && it.objid != r.parent.userid ) {
					sessionService.notifyUser( it.objid, r );
				}
			}
		}
    } 
    
    @After(pattern="MessageService.removeMessage*")
	public def broadcastRemoveMessage( def evt ) {
		def r = evt.args[0];
		if(r.channelid) {
			def classroom = classroomService.getClassInfo( r.channelid );		
			classroom.members.each {
				sessionService.notifyUser( it.objid, [msgtype:r.msgtype+"-removed", objid: r.objid, channelid: r.channelid ] );
			}
		}
	}
	
}

